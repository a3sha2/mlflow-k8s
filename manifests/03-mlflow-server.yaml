apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-artifacts-pvc
  namespace: mlflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: mlflow
  labels:
    app: mlflow-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-server
  template:
    metadata:
      labels:
        app: mlflow-server
    spec:
      containers:
      - name: mlflow-server
        image: python:3.9-slim
        ports:
        - containerPort: 5000
        env:
        - name: MLFLOW_BACKEND_STORE_URI
          value: "postgresql://postgres:postgres@postgres-service:5432/mlflow"
        - name: MLFLOW_DEFAULT_ARTIFACT_ROOT
          value: "/mlflow/artifacts"
        - name: MLFLOW_HOST
          value: "0.0.0.0"
        - name: MLFLOW_PORT
          value: "5000"
        command:
        - /bin/bash
        - -c
        - |
          pip install mlflow psycopg2-binary
          mlflow server \
            --backend-store-uri $MLFLOW_BACKEND_STORE_URI \
            --default-artifact-root $MLFLOW_DEFAULT_ARTIFACT_ROOT \
            --host $MLFLOW_HOST \
            --port $MLFLOW_PORT \
            --serve-artifacts
        volumeMounts:
        - name: mlflow-artifacts
          mountPath: /mlflow/artifacts
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: mlflow-artifacts
        persistentVolumeClaim:
          claimName: mlflow-artifacts-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: mlflow
  labels:
    app: mlflow-server
spec:
  selector:
    app: mlflow-server
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service-nodeport
  namespace: mlflow
  labels:
    app: mlflow-server
spec:
  selector:
    app: mlflow-server
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    nodePort: 30500
    protocol: TCP
  type: NodePort